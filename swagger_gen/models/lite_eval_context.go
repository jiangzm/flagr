// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LiteEvalContext lite eval context
// swagger:model liteEvalContext
type LiteEvalContext struct {

	// enable debug
	EnableDebug bool `json:"enableDebug,omitempty"`

	// entity context
	EntityContext interface{} `json:"entityContext,omitempty"`

	// entityID is used to represent current user
	EntityID string `json:"entityID,omitempty"`

	// entity type
	EntityType string `json:"entityType,omitempty"`

	// flagID
	// Minimum: 1
	FlagID int64 `json:"flagID,omitempty"`
}

// Validate validates this lite eval context
func (m *LiteEvalContext) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFlagID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LiteEvalContext) validateFlagID(formats strfmt.Registry) error {

	if swag.IsZero(m.FlagID) { // not required
		return nil
	}

	if err := validate.MinimumInt("flagID", "body", int64(m.FlagID), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LiteEvalContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LiteEvalContext) UnmarshalBinary(b []byte) error {
	var res LiteEvalContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
